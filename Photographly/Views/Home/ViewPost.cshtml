@model ViewPostViewModel

@{
	ViewData["Title"] = Model.Title;
}



<div class="container push text-center">
	<div class="row">
		<div class="col-md-6 offset-md-3">
			<h1 class="display-5 mb-3">@Model.Title</h1>
			<img src="data:image;base64,@Convert.ToBase64String(Model.PostImage)" class="img-fluid" alt="Post image." />
			<p class="mt-3 fw-bold text-center">@Model.Description</p>
			<p class="mt-3 fw-bold text-center text-mute">Likes: @Model.LikesCount</p>
			<div class="text-center">
				<h1 class="display-5 mt-3 mb-3">Comments (@Model.PostComments.Count()):</h1>
				<div style="overflow: auto; height:@(Model.PostComments.Any() ? "400px" : "0px")">

					@foreach (var item in Model.PostComments.OrderByDescending(p => p.CreatedOn))
					{
						<div class="card text-center mb-3 bg-dark">
							<div class="card-body text-center">
								<h5 class="card-title text-success">@item.Author.Email</h5>
								<hr style="color:white;" />
								<p class="card-text fw-bold text-white">@item.CommentText</p>
								<p class="card-text text-muted text-white">@item.CreatedOn</p>
							</div>
						</div>
					}
				</div>
				@if (User?.Identity?.IsAuthenticated ?? false)
				{
					<partial name="_AddCommentToPostPartial" model="new PostCommentModel()" />
				}

			</div>
		</div>
	</div>
</div>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}